import java.util.*;
class Solution {
    public boolean isIsomorphic(String s, String t) {
        if (s.length() != t.length()) return false;

        int[] mapS = new int[128]; // Map for s -> t
        int[] mapT = new int[128]; // Map for t -> s

        for (int i = 0; i < s.length(); i++) {
            char c1 = s.charAt(i);
            char c2 = t.charAt(i);

            // If already mapped, check if it matches
            if (mapS[c1] != 0 && mapS[c1] != c2) return false;
            if (mapT[c2] != 0 && mapT[c2] != c1) return false;

            // Store mapping
            mapS[c1] = c2;
            mapT[c2] = c1;
        }
        return true;
    }
}


class Solution1 {
    public boolean isIsomorphic(String s, String t) {
        if (s.length() != t.length()) return false; 
        
        HashMap<Character, Character> mapST = new HashMap<>();
        HashMap<Character, Character> mapTS = new HashMap<>();

        for (int i = 0; i < s.length(); i++) {
            char c1 = s.charAt(i);
            char c2 = t.charAt(i);

            if (mapST.containsKey(c1) && mapST.get(c1) != c2) {
                return false;
            }
            
            if (mapTS.containsKey(c2) && mapTS.get(c2) != c1) {
                return false;
            }

            mapST.put(c1, c2);
            mapTS.put(c2, c1);
        }

        return true;
    }
}
