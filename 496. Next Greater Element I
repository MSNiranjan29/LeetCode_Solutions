class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        int[] arr = new int[10001];
        for(int i=0; i < nums2.length;i++){
            arr[nums2[i]] =i;
        }
        for(int i=0; i < nums1.length;i++){
            nums1[i] = findIndex(nums2, arr[nums1[i]]);
        }
        return nums1;
    }
    private int findIndex(int[] nums2, int index){
        for(int i=index+1; i < nums2.length; i++){
          if(nums2[i] > nums2[index])  {
            return nums2[i];
          }

        }
        return -1;
    }
}

public class Solution1 {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        Map<Integer, Integer> nextGreaterMap = new HashMap<>();
        Stack<Integer> stack = new Stack<>();
        
        for (int num : nums2) {
            while (!stack.isEmpty() && stack.peek() < num) {
                nextGreaterMap.put(stack.pop(), num);
            }
            stack.push(num);
        }
        
        int[] result = new int[nums1.length];
        for (int i = 0; i < nums1.length; i++) {
            result[i] = nextGreaterMap.getOrDefault(nums1[i], -1);
        }
        
        return result;
    }
} 
